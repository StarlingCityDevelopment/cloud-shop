name: Create release

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: Install zip
        run: sudo apt install zip

      - name: Install Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Get latest code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.repository.default_branch }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set debug mode
        run: bun run .github/actions/set-debug-mode.js
        env:
          TGT_RELEASE_VERSION: ${{ github.ref_name }}

      - name: Bump manifest version
        run: bun run .github/actions/bump-manifest-version.js
        env:
          TGT_RELEASE_VERSION: ${{ github.ref_name }}

      - name: Push version bump change
        uses: EndBug/add-and-commit@v9
        with:
          add: fxmanifest.lua
          push: true
          default_author: github_actions
          message: "chore(fxmanifest): bump version to ${{ github.ref_name }}"

      - name: Install web dependencies
        if: hashFiles('web/package.json') != ''
        run: bun install --frozen-lockfile
        working-directory: web

      - name: Build web files
        if: hashFiles('web/package.json') != ''
        run: bun run build
        working-directory: web

      - name: Get repository name
        id: repo-name
        run: echo "name=$(echo ${{ github.repository }} | cut -d '/' -f 2)" >> $GITHUB_OUTPUT

      - name: Bundle files
        run: |
          REPO_NAME="${{ steps.repo-name.outputs.name }}"
          mkdir -p ./temp/$REPO_NAME

          # Copy essential files
          cp -f fxmanifest.lua ./temp/$REPO_NAME/ 2>/dev/null || :
          cp -f README.md ./temp/$REPO_NAME/ 2>/dev/null || :
          cp -f LICENSE ./temp/$REPO_NAME/ 2>/dev/null || :

          # Copy directories with error suppression
          cp -r ./client ./temp/$REPO_NAME/ 2>/dev/null || :
          cp -r ./server ./temp/$REPO_NAME/ 2>/dev/null || :
          cp -r ./config ./temp/$REPO_NAME/ 2>/dev/null || :
          cp -r ./shared ./temp/$REPO_NAME/ 2>/dev/null || :
          cp -r ./bridge ./temp/$REPO_NAME/ 2>/dev/null || :
          cp -r ./locales ./temp/$REPO_NAME/ 2>/dev/null || :

          # Handle web directory specially
          if [ -d "./web" ]; then
            # Check if web/dist or web/build exists
            if [ -d "./web/dist" ]; then
              mkdir -p ./temp/$REPO_NAME/web
              cp -r ./web/dist ./temp/$REPO_NAME/web/
            elif [ -d "./web/build" ]; then
              mkdir -p ./temp/$REPO_NAME/web
              cp -r ./web/build ./temp/$REPO_NAME/web/
            fi
          fi

          # Create zip file
          cd ./temp && zip -r ../$REPO_NAME.zip ./$REPO_NAME

      - name: Create release
        uses: "marvinpinto/action-automatic-releases@v1.2.1"
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: false
          files: ${{ steps.repo-name.outputs.name }}.zip

      - name: Update tag
        uses: EndBug/latest-tag@v1
        with:
          ref: ${{ github.ref_name }}
